events { worker_connections 1024; }

http {
  # this is required to proxy Grafana Live WebSocket connections.
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  upstream grafana {
    server grafana:3000;
  }

  upstream appwrite {
    server cloud.appwrite.io;
  }

  upstream auth {
    server 192.168.0.104:3001;
  }

  server {
    listen 80;
    root /usr/share/nginx/html;
    index index.html index.htm;

    location /grafana/initialize-auth/ {
      proxy_pass http://auth/initialize-auth/;
    }

    location /grafana/ {
      auth_request /grafana/auth;

      rewrite  ^/grafana/(.*)  /$1 break;
      proxy_set_header Host $http_host;
      proxy_pass http://grafana;

      sub_filter '</head>' '<style type="text/css">.sidemenu { display: none !important } footer { display: none !important } .css-3kc8b9 { left: 0 !important } button[aria-label="Cycle view mode"] { display: none !important } </style></head>';        
      sub_filter_once on;
    }

    # Proxy Grafana Live WebSocket connections.
    location /grafana/api/live/  {
      auth_request /grafana/auth;

      rewrite  ^/grafana/(.*)  /$1 break;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $http_host;
      proxy_pass http://grafana;
    }

    location = /grafana/auth {
      internal;
      proxy_pass_request_body off;
      proxy_set_header Content-Length "";
      proxy_set_header X-Original-URI $request_uri;
      proxy_pass http://auth/auth;
    }
  }
}